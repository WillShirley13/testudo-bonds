/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
    combineCodec,
    getBooleanDecoder,
    getBooleanEncoder,
    getStructDecoder,
    getStructEncoder,
    getU8Decoder,
    getU8Encoder,
    type FixedSizeCodec,
    type FixedSizeDecoder,
    type FixedSizeEncoder,
} from '@solana/kit';

export type ProcessClaimPayload = { bondIndex: number; autoCompound: boolean };

export type ProcessClaimPayloadArgs = ProcessClaimPayload;

export function getProcessClaimPayloadEncoder(): FixedSizeEncoder<ProcessClaimPayloadArgs> {
    return getStructEncoder([
        ['bondIndex', getU8Encoder()],
        ['autoCompound', getBooleanEncoder()],
    ]);
}

export function getProcessClaimPayloadDecoder(): FixedSizeDecoder<ProcessClaimPayload> {
    return getStructDecoder([
        ['bondIndex', getU8Decoder()],
        ['autoCompound', getBooleanDecoder()],
    ]);
}

export function getProcessClaimPayloadCodec(): FixedSizeCodec<
    ProcessClaimPayloadArgs,
    ProcessClaimPayload
> {
    return combineCodec(
        getProcessClaimPayloadEncoder(),
        getProcessClaimPayloadDecoder()
    );
}
